name: iOS CI Build & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-latest

    steps:
      - name: üß© Checkout Repository
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Select Xcode 16
        run: |
          sudo xcode-select -s /Applications/Xcode_16.app
          echo "‚úÖ Using Xcode:"
          xcodebuild -version

      - name: üì± Prepare iOS Simulator (iPhone 16 Pro, latest iOS 18.x)
        run: |
          echo "üì± Available runtimes:"
          xcrun simctl list runtimes

          # Pick the latest *iOS 18.x* runtime (not 26.x)
          RUNTIME=$(xcrun simctl list runtimes | grep "iOS 18" | grep -v unavailable | tail -1 | awk '{print $NF}' | tr -d '()')
          echo "‚úÖ Using runtime: $RUNTIME"

          DEVICE_TYPE="com.apple.CoreSimulator.SimDeviceType.iPhone-16-Pro"
          echo "üì± Creating simulator..."
          DEVICE_ID=$(xcrun simctl create "iPhone-16-Pro-CI" "$DEVICE_TYPE" "$RUNTIME")
          echo "DEVICE_ID=$DEVICE_ID" >> $GITHUB_ENV

          echo "üöÄ Booting simulator..."
          xcrun simctl boot "$DEVICE_ID" || true
          xcrun simctl list devices | grep "$DEVICE_ID"

      - name: üß± Build Holdings_Assignment
        run: |
          DERIVED_DATA_PATH="$PWD/DerivedData"
          echo "üèóÔ∏è Building app for simulator..."
          xcodebuild \
            -scheme "Holdings_Assignment" \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,id=${DEVICE_ID}" \
            -derivedDataPath "$DERIVED_DATA_PATH" \
            clean build \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      - name: üß™ Run Tests
        run: |
          DERIVED_DATA_PATH="$PWD/DerivedData"
          echo "üß™ Running tests..."
          xcodebuild \
            test \
            -scheme "Holdings_Assignment" \
            -sdk iphonesimulator \
            -destination "platform=iOS Simulator,id=${DEVICE_ID}" \
            -derivedDataPath "$DERIVED_DATA_PATH" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      - name: üßπ Cleanup Simulator
        if: always()
        run: |
          echo "üßπ Shutting down and deleting simulator..."
          xcrun simctl shutdown "$DEVICE_ID" || true
          xcrun simctl delete "$DEVICE_ID" || true
