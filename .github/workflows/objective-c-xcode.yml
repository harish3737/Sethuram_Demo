name: Xcode - Build and Test (iOS Simulator)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: macos-15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Select Xcode 16
        run: sudo xcode-select -s /Applications/Xcode_16.app

      - name: Show available runtimes
        run: |
          echo "ðŸ“± Listing available runtimes:"
          xcrun simctl list runtimes

      - name: Create and boot iPhone simulator
        id: simulator
        run: |
          # Pick the latest iOS runtime identifier (e.g., com.apple.CoreSimulator.SimRuntime.iOS-18-6)
          RUNTIME=$(xcrun simctl list runtimes | grep "iOS" | grep -v unavailable | tail -1 | awk -F '[()]' '{print $2}')
          echo "âœ… Using runtime: $RUNTIME"

          DEVICE_TYPE="com.apple.CoreSimulator.SimDeviceType.iPhone-16-Pro"
          DEVICE_ID=$(xcrun simctl create "iPhone-16-Pro-CI" "$DEVICE_TYPE" "$RUNTIME")
          echo "âœ… Created simulator with ID: $DEVICE_ID"

          echo "DEVICE_ID=$DEVICE_ID" >> $GITHUB_ENV

          echo "ðŸš€ Booting simulator..."
          xcrun simctl boot "$DEVICE_ID"

          echo "âŒ› Waiting for simulator to be ready..."
          xcrun simctl bootstatus "$DEVICE_ID" -b

          xcrun simctl list devices

      - name: Build and Test with xcodebuild
        run: |
          SCHEME="Holdings_Assignment"
          echo "ðŸ“¦ Building and testing scheme: $SCHEME"
          xcodebuild \
            -scheme "$SCHEME" \
            -destination "platform=iOS Simulator,id=${DEVICE_ID}" \
            clean build test \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            | xcpretty
